%%%outputfilename: name of the file generated by assembling lines of text
%%%from various files.
%%%
%%%filenames: an optional argument, a cell array of strings representing
%%%the filenames from which this function will copy lines into the output
%%%file. If not specified, a filenames cell array will be created by taking
%%%the name of every file in current folder.
%%%
%%%lineidentifier: can be an array or single value. If lineidentifier is a
%%%string, the function will use each line in the specified files that starts with the specified
%%%piece of text. If lineidentifier is an integer, it will take the line
%%%specified by that value (e.g. if lineidentifier=10, the function will
%%%copy the 10th line of the specified files into the output file).


function CALAMARI_compile_classifier_results_summary_txt_file(directory_name)

topdir = pwd;

cd(directory_name);

lineidentifier = 'mean';
outputfilename = [directory_name 'class_perf_summary.txt'];

%If the desired files to be read from are not specified, create a list of
%all of the files in the current directory.
%if ~exist(filenames)
    d=dir;
    for i=3:length(d)
        filenames{i-2}=d(i).name;
    end
%end


fwriteto=fopen(outputfilename, 'wt');

for s=1:length(filenames)
    line={};
    LinesToUse=[];
    
    %%This array keeps track of
    filenames{s};
    freadfrom=fopen(filenames{s}, 'r');

    %Store each line of the current file in cell array "line"
    while 1
        templine=fgetl(freadfrom);
        templine;
        if templine==-1
            break
        end
        line{length(line)+1}=templine;
        
    end

    %%If lineidentifier is a string, find the lines that start with that
    %%string, store them in LinesToUse;
    if ischar(lineidentifier)==1
        for m=lineidentifier
            for j=1:length(line)
                currentline=line{j};

                if findstr(currentline, m)==1
                    LinesToUse(length(LinesToUse)+1)=j;
                end

            end
        end

    end


    %%If lineidentifier is a number, check to see if the lines exist,
    %%and, if they do, save those values in LinesToUse;
    if isnumeric(lineidentifier)
        for m=lineidentifier
            if m<=length(line)
                LinesToUse(length(LinesToUse)+1)=m;
            end
        end
    end
    

    for i=LinesToUse
        
        fprintf(fwriteto, filenames{s}(1:4)); %write subj_id code
        fprintf(fwriteto, '\t');
        fprintf(fwriteto, line{i});
        fprintf(fwriteto, '\n');
    end

    
    fclose(freadfrom);
end
fclose(fwriteto);
cd(topdir);

